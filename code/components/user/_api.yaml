tags:
  - name: userProfile
    description: User profile information
  - name: userAuth
    description: Authentication routes

components:
  schemas:
    UsernamePassword:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          minLength: 5
          maxLength: 30
          example: johndoe
        password:
          type: string
          example: mYp@s$w0rd
    Register:
      type: object
      required:
        - username
        - password
        - personalData
      properties:
        username:
          type: string
          minLength: 5
          maxLength: 30
          example: janedoe
          pattern: '^(?!.*\s)(?!.*[!@#\$%^&*(),.?":{}|<>])[A-Za-z\d]'
        password:
          type: string
          pattern: '^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[!@#\$%^&*(),.?":{}|<>])[A-Za-z\d!@#\$%^&*(),.?":{}|<>]'
          minLength: 8
          example: mYp@s$w0rd
        personalData:
          type: object
          required:
            - firstName
            - lastName
            - cellNumber
            - email
          properties:
            firstName:
              type: string
              minLength: 3
              maxLength: 30
              example: Jane
            lastName:
              type: string
              minLength: 3
              maxLength: 30
              example: Doe
            cellNumber:
              type: string
              minLength: 8
              maxLength: 20
              example: +55 (41) 98510-6083
            email:
              type: string
              minLength: 10
              maxLength: 50
              example: jane.doe@gmail.com
    Update:
      type: object
      required:
        - username
        - password
        - personalData
      properties:
        username:
          type: string
          minLength: 5
          maxLength: 30
          example: johndoe
          pattern: '^(?!.*\s)(?!.*[!@#\$%^&*(),.?":{}|<>])[A-Za-z\d]'
        password:
          type: string
          pattern: '^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[!@#\$%^&*(),.?":{}|<>])[A-Za-z\d!@#\$%^&*(),.?":{}|<>]'
          minLength: 8
          example: $3crEt!z
        personalData:
          type: object
          required:
            - firstName
            - lastName
            - cellNumber
            - email
          properties:
            firstName:
              type: string
              minLength: 3
              maxLength: 30
              example: John
            lastName:
              type: string
              minLength: 3
              maxLength: 30
              example: Doe
            cellNumber:
              type: string
              minLength: 8
              maxLength: 20
              example: +55 (11) 98205-6580
            email:
              type: string
              minLength: 10
              maxLength: 50
              example: newemail@gmail.com

    Id:
      type: integer
      format: int32
      minimum: 1
      example: 150

  parameters:
    Id:
      in: path
      name: id
      description: Unique id
      required: true
      schema:
        $ref: '#/components/schemas/Id'

  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT