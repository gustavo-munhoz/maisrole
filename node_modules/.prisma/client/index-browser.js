
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.9.0
 * Query Engine version: ca7fcef713137fa11029d519a9780db130cca91d
 */
Prisma.prismaVersion = {
  client: "4.9.0",
  engine: "ca7fcef713137fa11029d519a9780db130cca91d"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.EventScalarFieldEnum = makeEnum({
  id: 'id',
  hostId: 'hostId',
  name: 'name',
  startDate: 'startDate',
  endDate: 'endDate',
  price: 'price',
  brief: 'brief',
  stateId: 'stateId'
});

exports.Prisma.EventStateScalarFieldEnum = makeEnum({
  id: 'id',
  status: 'status'
});

exports.Prisma.HostAddressScalarFieldEnum = makeEnum({
  id: 'id',
  street: 'street',
  number: 'number',
  cep: 'cep',
  district: 'district',
  city: 'city',
  state: 'state',
  hostId: 'hostId'
});

exports.Prisma.HostAgendaScalarFieldEnum = makeEnum({
  id: 'id',
  dayId: 'dayId',
  open: 'open',
  hostId: 'hostId'
});

exports.Prisma.HostContactScalarFieldEnum = makeEnum({
  id: 'id',
  insta: 'insta',
  face: 'face',
  mobile: 'mobile',
  phone: 'phone',
  email: 'email'
});

exports.Prisma.HostScalarFieldEnum = makeEnum({
  id: 'id',
  hostName: 'hostName',
  password: 'password'
});

exports.Prisma.ReviewScalarFieldEnum = makeEnum({
  id: 'id',
  userId: 'userId',
  hostId: 'hostId',
  postDate: 'postDate',
  rating: 'rating',
  text: 'text'
});

exports.Prisma.RoleScalarFieldEnum = makeEnum({
  name: 'name'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserPersonalDataScalarFieldEnum = makeEnum({
  id: 'id',
  cellNumber: 'cellNumber',
  firstName: 'firstName',
  lastName: 'lastName',
  dateOfBirth: 'dateOfBirth',
  email: 'email',
  userId: 'userId'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  username: 'username',
  password: 'password'
});

exports.Prisma.WeekDayScalarFieldEnum = makeEnum({
  id: 'id',
  day: 'day'
});


exports.Prisma.ModelName = makeEnum({
  User: 'User',
  Host: 'Host',
  userPersonalData: 'userPersonalData',
  Role: 'Role',
  hostAddress: 'hostAddress',
  hostContact: 'hostContact',
  Review: 'Review',
  Event: 'Event',
  EventState: 'EventState',
  WeekDay: 'WeekDay',
  HostAgenda: 'HostAgenda'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
